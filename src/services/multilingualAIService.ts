export interface LanguageConfig {
  code: string;
  name: string;
  flag: string;
  speechCode: string;
  voiceNames: string[];
  greetings: {
    welcome: string;
    reservation: string;
    checkin: string;
    checkout: string;
    roomAvailability: string;
  };
  prompts: {
    dates: string;
    guests: string;
    roomType: string;
    guestInfo: string;
    payment: string;
    confirmation: string;
  };
  responses: {
    dateConfirm: string;
    roomSelected: string;
    infoReceived: string;
    paymentSet: string;
    bookingConfirmed: string;
    error: string;
    help: string;
  };
  processCompletion: Record<string, string | unknown>,
}

export const languageConfigs: Record<string, LanguageConfig> = {
  en: {
    code: 'en',
    name: 'English',
    flag: 'üá∫üá∏',
    speechCode: 'en-US',
    voiceNames: ['Google US English', 'Microsoft Zira', 'Alex'],
    greetings: {
      welcome: 'Welcome to Lagunacreek Resort & Spa! I can help you with reservations, check-in, check-out, and room availability. How can I assist you today?',
      reservation: 'I\'ll help you make a reservation. Please tell me your check-in date, check-out date, and number of guests.',
      checkin: 'I\'ll help you check in. Please provide your confirmation number or name.',
      checkout: 'I\'ll help you check out. Let me review your folio and charges.',
      roomAvailability: 'I\'ll check room availability for you. What dates are you looking for?'
    },
    prompts: {
      dates: 'Please tell me your check-in and check-out dates.',
      guests: 'How many adults and children will be staying?',
      roomType: 'Which room type would you prefer? We have Ocean View King Suite, Deluxe Garden Room, or Family Oceanfront Suite.',
      guestInfo: 'Please provide your full name, phone number, and email address.',
      payment: 'How would you like to pay? Credit card, pay at hotel, or digital wallet?',
      confirmation: 'Please review your booking details and say "confirm" to complete your reservation.'
    },
    responses: {
      dateConfirm: 'Got it. Check-in: {checkin}, Check-out: {checkout}.',
      roomSelected: '{roomType} selected at ${price} per night.',
      infoReceived: 'Thank you. I have your information.',
      paymentSet: '{paymentMethod} selected.',
      bookingConfirmed: 'Your booking is confirmed! Confirmation number: {confirmationId}',
      error: 'I didn\'t understand that. Could you please repeat?',
      help: 'I can help you with reservations, check-in, check-out, and room availability. Just tell me what you need.'
    },
    processCompletion: {
      reservation: {
        title: 'Reservation Created Successfully! üéâ',
        description: 'Your hotel reservation has been confirmed and is ready for your stay.',
        voiceMessage: 'Your reservation has been created successfully! Confirmation number {confirmationNumber}.',
        fields: {
          confirmationNumber: 'Confirmation Number',
          guestName: 'Guest Name',
          roomType: 'Room Type',
          checkInDate: 'Check-in Date',
          checkOutDate: 'Check-out Date',
          totalAmount: 'Total Amount'
        }
      },
      checkin: {
        title: 'Check-in Completed Successfully! üè®',
        description: 'Welcome to Lagunacreek! Your room is ready and key cards have been prepared.',
        voiceMessage: 'Check-in completed successfully! Your room {roomNumber} is ready.',
        fields: {
          roomNumber: 'Room Number',
          guestName: 'Guest Name',
          roomType: 'Room Type',
          keyCards: 'Key Cards Ready'
        }
      },
      checkout: {
        title: 'Check-out Completed Successfully! ‚úÖ',
        description: 'Thank you for staying with us! We hope you enjoyed your experience.',
        voiceMessage: 'Check-out completed successfully! Thank you for staying with us.',
        fields: {
          guestName: 'Guest Name',
          roomNumber: 'Room Number',
          totalAmount: 'Final Amount',
          receipt: 'Receipt sent to email'
        }
      }
    }
  },
  es: {
    code: 'es',
    name: 'Espa√±ol',
    flag: 'üá™üá∏',
    speechCode: 'es-ES',
    voiceNames: ['Google espa√±ol', 'Microsoft Helena', 'M√≥nica'],
    greetings: {
      welcome: '¬°Bienvenido a Lagunacreek Resort & Spa! Puedo ayudarte con reservas, check-in, check-out y disponibilidad de habitaciones. ¬øC√≥mo puedo asistirte hoy?',
      reservation: 'Te ayudar√© a hacer una reserva. Por favor dime tu fecha de entrada, fecha de salida y n√∫mero de hu√©spedes.',
      checkin: 'Te ayudar√© con el check-in. Por favor proporciona tu n√∫mero de confirmaci√≥n o nombre.',
      checkout: 'Te ayudar√© con el check-out. D√©jame revisar tu cuenta y cargos.',
      roomAvailability: 'Verificar√© la disponibilidad de habitaciones para ti. ¬øQu√© fechas buscas?'
    },
    prompts: {
      dates: 'Por favor dime tus fechas de entrada y salida.',
      guests: '¬øCu√°ntos adultos y ni√±os se hospedar√°n?',
      roomType: '¬øQu√© tipo de habitaci√≥n prefieres? Tenemos Suite King Vista al Mar, Habitaci√≥n Deluxe Garden, o Suite Familiar Frente al Mar.',
      guestInfo: 'Por favor proporciona tu nombre completo, n√∫mero de tel√©fono y direcci√≥n de email.',
      payment: '¬øC√≥mo te gustar√≠a pagar? Tarjeta de cr√©dito, pagar en el hotel, o billetera digital?',
      confirmation: 'Por favor revisa los detalles de tu reserva y di "confirmar" para completar tu reservaci√≥n.'
    },
    responses: {
      dateConfirm: 'Entendido. Entrada: {checkin}, Salida: {checkout}.',
      roomSelected: '{roomType} seleccionada a ${price} por noche.',
      infoReceived: 'Gracias. Tengo tu informaci√≥n.',
      paymentSet: '{paymentMethod} seleccionado.',
      bookingConfirmed: '¬°Tu reserva est√° confirmada! N√∫mero de confirmaci√≥n: {confirmationId}',
      error: 'No entend√≠ eso. ¬øPodr√≠as repetir por favor?',
      help: 'Puedo ayudarte con reservas, check-in, check-out y disponibilidad de habitaciones. Solo dime qu√© necesitas.'
    },
    processCompletion: {
      reservation: {
        title: '¬°Reserva Creada Exitosamente! üéâ',
        description: 'Tu reserva de hotel ha sido confirmada y est√° lista para tu estad√≠a.',
        voiceMessage: '¬°Tu reserva ha sido creada exitosamente! N√∫mero de confirmaci√≥n {confirmationNumber}.',
        fields: {
          confirmationNumber: 'N√∫mero de Confirmaci√≥n',
          guestName: 'Nombre del Hu√©sped',
          roomType: 'Tipo de Habitaci√≥n',
          checkInDate: 'Fecha de Entrada',
          checkOutDate: 'Fecha de Salida',
          totalAmount: 'Monto Total'
        }
      },
      checkin: {
        title: '¬°Check-in Completado Exitosamente! üè®',
        description: '¬°Bienvenido a Lagunacreek! Tu habitaci√≥n est√° lista y las tarjetas de acceso han sido preparadas.',
        voiceMessage: '¬°Check-in completado exitosamente! Tu habitaci√≥n {roomNumber} est√° lista.',
        fields: {
          roomNumber: 'N√∫mero de Habitaci√≥n',
          guestName: 'Nombre del Hu√©sped',
          roomType: 'Tipo de Habitaci√≥n',
          keyCards: 'Tarjetas de Acceso Listas'
        }
      },
      checkout: {
        title: '¬°Check-out Completado Exitosamente! ‚úÖ',
        description: '¬°Gracias por hospedarte con nosotros! Esperamos que hayas disfrutado tu experiencia.',
        voiceMessage: '¬°Check-out completado exitosamente! Gracias por hospedarte con nosotros.',
        fields: {
          guestName: 'Nombre del Hu√©sped',
          roomNumber: 'N√∫mero de Habitaci√≥n',
          totalAmount: 'Monto Final',
          receipt: 'Recibo enviado al email'
        }
      }
    }
  },
  hi: {
    code: 'hi',
    name: '‡§π‡§ø‡§Ç‡§¶‡•Ä',
    flag: 'üáÆüá≥',
    speechCode: 'hi-IN',
    voiceNames: ['Google ‡§π‡§ø‡§®‡•ç‡§¶‡•Ä', 'Microsoft Hemant', 'Kalpana'],
    greetings: {
      welcome: '‡§≤‡§ó‡•Å‡§®‡§æ‡§ï‡•ç‡§∞‡•Ä‡§ï ‡§∞‡§ø‡§∏‡•â‡§∞‡•ç‡§ü ‡§è‡§Ç‡§° ‡§∏‡•ç‡§™‡§æ ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§¨‡•Å‡§ï‡§ø‡§Ç‡§ó, ‡§ö‡•á‡§ï-‡§á‡§®, ‡§ö‡•á‡§ï-‡§Ü‡§â‡§ü ‡§î‡§∞ ‡§ï‡§Æ‡§∞‡•ã‡§Ç ‡§ï‡•Ä ‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§§‡§æ ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç‡•§ ‡§Ü‡§ú ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç?',
      reservation: '‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§¨‡•Å‡§ï‡§ø‡§Ç‡§ó ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡•Ç‡§Ç‡§ó‡§æ‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡•Ä ‡§ö‡•á‡§ï-‡§á‡§® ‡§§‡§æ‡§∞‡•Ä‡§ñ, ‡§ö‡•á‡§ï-‡§Ü‡§â‡§ü ‡§§‡§æ‡§∞‡•Ä‡§ñ ‡§î‡§∞ ‡§Æ‡•á‡§π‡§Æ‡§æ‡§®‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§¨‡§§‡§æ‡§è‡§Ç‡•§',
      checkin: '‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§ö‡•á‡§ï-‡§á‡§® ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡•Ç‡§Ç‡§ó‡§æ‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡§æ ‡§ï‡§®‡•ç‡§´‡§∞‡•ç‡§Æ‡•á‡§∂‡§® ‡§®‡§Ç‡§¨‡§∞ ‡§Ø‡§æ ‡§®‡§æ‡§Æ ‡§¨‡§§‡§æ‡§è‡§Ç‡•§',
      checkout: '‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§ö‡•á‡§ï-‡§Ü‡§â‡§ü ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡•Ç‡§Ç‡§ó‡§æ‡•§ ‡§Æ‡•Å‡§ù‡•á ‡§Ü‡§™‡§ï‡§æ ‡§¨‡§ø‡§≤ ‡§î‡§∞ ‡§ö‡§æ‡§∞‡•ç‡§ú‡•á‡§∏ ‡§¶‡•á‡§ñ‡§®‡•á ‡§¶‡•á‡§Ç‡•§',
      roomAvailability: '‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§Æ‡§∞‡•ã‡§Ç ‡§ï‡•Ä ‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§§‡§æ ‡§ö‡•á‡§ï ‡§ï‡§∞‡•Ç‡§Ç‡§ó‡§æ‡•§ ‡§Ü‡§™ ‡§ï‡•å‡§® ‡§∏‡•Ä ‡§§‡§æ‡§∞‡•Ä‡§ñ‡•á‡§Ç ‡§¶‡•á‡§ñ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç?'
    },
    prompts: {
      dates: '‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡•Ä ‡§ö‡•á‡§ï-‡§á‡§® ‡§î‡§∞ ‡§ö‡•á‡§ï-‡§Ü‡§â‡§ü ‡§§‡§æ‡§∞‡•Ä‡§ñ‡•á‡§Ç ‡§¨‡§§‡§æ‡§è‡§Ç‡•§',
      guests: '‡§ï‡§ø‡§§‡§®‡•á ‡§µ‡§Ø‡§∏‡•ç‡§ï ‡§î‡§∞ ‡§¨‡§ö‡•ç‡§ö‡•á ‡§∞‡•Å‡§ï‡•á‡§Ç‡§ó‡•á?',
      roomType: '‡§Ü‡§™ ‡§ï‡•å‡§® ‡§∏‡§æ ‡§ï‡§Æ‡§∞‡§æ ‡§™‡§∏‡§Ç‡§¶ ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á? ‡§π‡§Æ‡§æ‡§∞‡•á ‡§™‡§æ‡§∏ ‡§ì‡§∂‡§® ‡§µ‡•ç‡§Ø‡•Ç ‡§ï‡§ø‡§Ç‡§ó ‡§∏‡•Ç‡§ü, ‡§°‡•Ä‡§≤‡§ï‡•ç‡§∏ ‡§ó‡§æ‡§∞‡•ç‡§°‡§® ‡§∞‡•Ç‡§Æ, ‡§Ø‡§æ ‡§´‡•à‡§Æ‡§ø‡§≤‡•Ä ‡§ì‡§∂‡§®‡§´‡•ç‡§∞‡§Ç‡§ü ‡§∏‡•Ç‡§ü ‡§π‡•à‡•§',
      guestInfo: '‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡§æ ‡§™‡•Ç‡§∞‡§æ ‡§®‡§æ‡§Æ, ‡§´‡•ã‡§® ‡§®‡§Ç‡§¨‡§∞ ‡§î‡§∞ ‡§à‡§Æ‡•á‡§≤ ‡§™‡§§‡§æ ‡§¨‡§§‡§æ‡§è‡§Ç‡•§',
      payment: '‡§Ü‡§™ ‡§ï‡•à‡§∏‡•á ‡§≠‡•Å‡§ó‡§§‡§æ‡§® ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡•á‡§Ç‡§ó‡•á? ‡§ï‡•ç‡§∞‡•á‡§°‡§ø‡§ü ‡§ï‡§æ‡§∞‡•ç‡§°, ‡§π‡•ã‡§ü‡§≤ ‡§Æ‡•á‡§Ç ‡§≠‡•Å‡§ó‡§§‡§æ‡§®, ‡§Ø‡§æ ‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§µ‡•â‡§≤‡•á‡§ü?',
      confirmation: '‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡•Ä ‡§¨‡•Å‡§ï‡§ø‡§Ç‡§ó ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§¶‡•á‡§ñ‡•á‡§Ç ‡§î‡§∞ ‡§Ö‡§™‡§®‡§æ ‡§Ü‡§∞‡§ï‡•ç‡§∑‡§£ ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è "‡§ï‡§®‡•ç‡§´‡§∞‡•ç‡§Æ" ‡§ï‡§π‡•á‡§Ç‡•§'
    },
    responses: {
      dateConfirm: '‡§∏‡§Æ‡§ù ‡§ó‡§Ø‡§æ‡•§ ‡§ö‡•á‡§ï-‡§á‡§®: {checkin}, ‡§ö‡•á‡§ï-‡§Ü‡§â‡§ü: {checkout}‡•§',
      roomSelected: '{roomType} ‡§ö‡•Å‡§®‡§æ ‡§ó‡§Ø‡§æ ${price} ‡§™‡•ç‡§∞‡§§‡§ø ‡§∞‡§æ‡§§‡•§',
      infoReceived: '‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶‡•§ ‡§Æ‡•á‡§∞‡•á ‡§™‡§æ‡§∏ ‡§Ü‡§™‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§π‡•à‡•§',
      paymentSet: '{paymentMethod} ‡§ö‡•Å‡§®‡§æ ‡§ó‡§Ø‡§æ‡•§',
      bookingConfirmed: '‡§Ü‡§™‡§ï‡•Ä ‡§¨‡•Å‡§ï‡§ø‡§Ç‡§ó ‡§ï‡§®‡•ç‡§´‡§∞‡•ç‡§Æ ‡§π‡•ã ‡§ó‡§à! ‡§ï‡§®‡•ç‡§´‡§∞‡•ç‡§Æ‡•á‡§∂‡§® ‡§®‡§Ç‡§¨‡§∞: {confirmationId}',
      error: '‡§Æ‡•à‡§Ç ‡§∏‡§Æ‡§ù ‡§®‡§π‡•Ä‡§Ç ‡§™‡§æ‡§Ø‡§æ‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§¶‡•ã‡§¨‡§æ‡§∞‡§æ ‡§ï‡§π‡•á‡§Ç?',
      help: '‡§Æ‡•à‡§Ç ‡§¨‡•Å‡§ï‡§ø‡§Ç‡§ó, ‡§ö‡•á‡§ï-‡§á‡§®, ‡§ö‡•á‡§ï-‡§Ü‡§â‡§ü ‡§î‡§∞ ‡§ï‡§Æ‡§∞‡•ã‡§Ç ‡§ï‡•Ä ‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§§‡§æ ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç‡•§ ‡§¨‡§∏ ‡§¨‡§§‡§æ‡§è‡§Ç ‡§ï‡§ø ‡§Ü‡§™‡§ï‡•ã ‡§ï‡•ç‡§Ø‡§æ ‡§ö‡§æ‡§π‡§ø‡§è‡•§'
    },
    processCompletion: {
      reservation: {
        title: '‡§Ü‡§∞‡§ï‡•ç‡§∑‡§£ ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§¨‡§®‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ! üéâ',
        description: '‡§Ü‡§™‡§ï‡§æ ‡§π‡•ã‡§ü‡§≤ ‡§Ü‡§∞‡§ï‡•ç‡§∑‡§£ ‡§™‡•Å‡§∑‡•ç‡§ü ‡§π‡•ã ‡§ó‡§Ø‡§æ ‡§π‡•à ‡§î‡§∞ ‡§Ü‡§™‡§ï‡•á ‡§™‡•ç‡§∞‡§µ‡§æ‡§∏ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•à‡•§',
        voiceMessage: '‡§Ü‡§™‡§ï‡§æ ‡§Ü‡§∞‡§ï‡•ç‡§∑‡§£ ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§¨‡§®‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à! ‡§™‡•Å‡§∑‡•ç‡§ü‡§ø‡§ï‡§∞‡§£ ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ {confirmationNumber}‡•§',
        fields: {
          confirmationNumber: '‡§™‡•Å‡§∑‡•ç‡§ü‡§ø‡§ï‡§∞‡§£ ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ',
          guestName: '‡§Ö‡§§‡§ø‡§•‡§ø ‡§ï‡§æ ‡§®‡§æ‡§Æ',
          roomType: '‡§ï‡§Æ‡§∞‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞',
          checkInDate: '‡§ö‡•á‡§ï-‡§á‡§® ‡§§‡§æ‡§∞‡•Ä‡§ñ',
          checkOutDate: '‡§ö‡•á‡§ï-‡§Ü‡§â‡§ü ‡§§‡§æ‡§∞‡•Ä‡§ñ',
          totalAmount: '‡§ï‡•Å‡§≤ ‡§∞‡§æ‡§∂‡§ø'
        }
      },
      checkin: {
        title: '‡§ö‡•á‡§ï-‡§á‡§® ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§™‡•Ç‡§∞‡§æ ‡§π‡•Å‡§Ü! üè®',
        description: '‡§≤‡§ó‡•Å‡§®‡§æ‡§ï‡•ç‡§∞‡•Ä‡§ï ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à! ‡§Ü‡§™‡§ï‡§æ ‡§ï‡§Æ‡§∞‡§æ ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•à ‡§î‡§∞ ‡§ï‡•Ä ‡§ï‡§æ‡§∞‡•ç‡§° ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§ï‡§∞ ‡§¶‡§ø‡§è ‡§ó‡§è ‡§π‡•à‡§Ç‡•§',
        voiceMessage: '‡§ö‡•á‡§ï-‡§á‡§® ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§™‡•Ç‡§∞‡§æ ‡§π‡•Å‡§Ü! ‡§Ü‡§™‡§ï‡§æ ‡§ï‡§Æ‡§∞‡§æ {roomNumber} ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•à‡•§',
        fields: {
          roomNumber: '‡§ï‡§Æ‡§∞‡§æ ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ',
          guestName: '‡§Ö‡§§‡§ø‡§•‡§ø ‡§ï‡§æ ‡§®‡§æ‡§Æ',
          roomType: '‡§ï‡§Æ‡§∞‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞',
          keyCards: '‡§ï‡•Ä ‡§ï‡§æ‡§∞‡•ç‡§° ‡§§‡•à‡§Ø‡§æ‡§∞'
        }
      },
      checkout: {
        title: '‡§ö‡•á‡§ï-‡§Ü‡§â‡§ü ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§™‡•Ç‡§∞‡§æ ‡§π‡•Å‡§Ü! ‚úÖ',
        description: '‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§∞‡§π‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶! ‡§π‡§Æ‡•á‡§Ç ‡§â‡§Æ‡•ç‡§Æ‡•Ä‡§¶ ‡§π‡•à ‡§ï‡§ø ‡§Ü‡§™‡§®‡•á ‡§Ö‡§™‡§®‡§æ ‡§Ö‡§®‡•Å‡§≠‡§µ ‡§ï‡§æ ‡§Ü‡§®‡§Ç‡§¶ ‡§≤‡§ø‡§Ø‡§æ‡•§',
        voiceMessage: '‡§ö‡•á‡§ï-‡§Ü‡§â‡§ü ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§™‡•Ç‡§∞‡§æ ‡§π‡•Å‡§Ü! ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§∞‡§π‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶‡•§',
        fields: {
          guestName: '‡§Ö‡§§‡§ø‡§•‡§ø ‡§ï‡§æ ‡§®‡§æ‡§Æ',
          roomNumber: '‡§ï‡§Æ‡§∞‡§æ ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ',
          totalAmount: '‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§∞‡§æ‡§∂‡§ø',
          receipt: '‡§∞‡§∏‡•Ä‡§¶ ‡§à‡§Æ‡•á‡§≤ ‡§™‡§∞ ‡§≠‡•á‡§ú‡•Ä ‡§ó‡§à'
        }
      }
    }
  },
  fr: {
    code: 'fr',
    name: 'Fran√ßais',
    flag: 'üá´üá∑',
    speechCode: 'fr-FR',
    voiceNames: ['Google fran√ßais', 'Microsoft Julie', 'Am√©lie'],
    greetings: {
      welcome: 'Bienvenue au Lagunacreek Resort & Spa! Je peux vous aider avec les r√©servations, l\'enregistrement, le d√©part et la disponibilit√© des chambres. Comment puis-je vous aider aujourd\'hui?',
      reservation: 'Je vais vous aider √† faire une r√©servation. Veuillez me dire votre date d\'arriv√©e, date de d√©part et nombre d\'invit√©s.',
      checkin: 'Je vais vous aider avec l\'enregistrement. Veuillez fournir votre num√©ro de confirmation ou nom.',
      checkout: 'Je vais vous aider avec le d√©part. Laissez-moi examiner votre facture et frais.',
      roomAvailability: 'Je vais v√©rifier la disponibilit√© des chambres pour vous. Quelles dates recherchez-vous?'
    },
    prompts: {
      dates: 'Veuillez me dire vos dates d\'arriv√©e et de d√©part.',
      guests: 'Combien d\'adultes et d\'enfants s√©journeront?',
      roomType: 'Quel type de chambre pr√©f√©rez-vous? Nous avons Suite King Vue Oc√©an, Chambre Deluxe Garden, ou Suite Familiale Front de Mer.',
      guestInfo: 'Veuillez fournir votre nom complet, num√©ro de t√©l√©phone et adresse email.',
      payment: 'Comment souhaitez-vous payer? Carte de cr√©dit, payer √† l\'h√¥tel, ou portefeuille num√©rique?',
      confirmation: 'Veuillez examiner les d√©tails de votre r√©servation et dire "confirmer" pour compl√©ter votre r√©servation.'
    },
    responses: {
      dateConfirm: 'Compris. Arriv√©e: {checkin}, D√©part: {checkout}.',
      roomSelected: '{roomType} s√©lectionn√©e √† ${price} par nuit.',
      infoReceived: 'Merci. J\'ai vos informations.',
      paymentSet: '{paymentMethod} s√©lectionn√©.',
      bookingConfirmed: 'Votre r√©servation est confirm√©e! Num√©ro de confirmation: {confirmationId}',
      error: 'Je n\'ai pas compris. Pourriez-vous r√©p√©ter s\'il vous pla√Æt?',
      help: 'Je peux vous aider avec les r√©servations, l\'enregistrement, le d√©part et la disponibilit√© des chambres. Dites-moi simplement ce dont vous avez besoin.'
    },
    processCompletion: {
      reservation: {
        title: 'R√©servation Cr√©√©e avec Succ√®s! üéâ',
        description: 'Votre r√©servation d\'h√¥tel a √©t√© confirm√©e et est pr√™te pour votre s√©jour.',
        voiceMessage: 'Votre r√©servation a √©t√© cr√©√©e avec succ√®s! Num√©ro de confirmation {confirmationNumber}.',
        fields: {
          confirmationNumber: 'Num√©ro de Confirmation',
          guestName: 'Nom de l\'Invit√©',
          roomType: 'Type de Chambre',
          checkInDate: 'Date d\'Arriv√©e',
          checkOutDate: 'Date de D√©part',
          totalAmount: 'Montant Total'
        }
      },
      checkin: {
        title: 'Enregistrement Termin√© avec Succ√®s! üè®',
        description: 'Bienvenue √† Lagunacreek! Votre chambre est pr√™te et les cartes d\'acc√®s ont √©t√© pr√©par√©es.',
        voiceMessage: 'Enregistrement termin√© avec succ√®s! Votre chambre {roomNumber} est pr√™te.',
        fields: {
          roomNumber: 'Num√©ro de Chambre',
          guestName: 'Nom de l\'Invit√©',
          roomType: 'Type de Chambre',
          keyCards: 'Cartes d\'Acc√®s Pr√™tes'
        }
      },
      checkout: {
        title: 'D√©part Termin√© avec Succ√®s! ‚úÖ',
        description: 'Merci d\'avoir s√©journ√© avec nous! Nous esp√©rons que vous avez appr√©ci√© votre exp√©rience.',
        voiceMessage: 'D√©part termin√© avec succ√®s! Merci d\'avoir s√©journ√© avec nous.',
        fields: {
          guestName: 'Nom de l\'Invit√©',
          roomNumber: 'Num√©ro de Chambre',
          totalAmount: 'Montant Final',
          receipt: 'Re√ßu envoy√© par email'
        }
      }
    }
  },
  de: {
    code: 'de',
    name: 'Deutsch',
    flag: 'üá©üá™',
    speechCode: 'de-DE',
    voiceNames: ['Google Deutsch', 'Microsoft Katja', 'Anna'],
    greetings: {
      welcome: 'Willkommen im Lagunacreek Resort & Spa! Ich kann Ihnen bei Reservierungen, Check-in, Check-out und Zimmerverf√ºgbarkeit helfen. Wie kann ich Ihnen heute helfen?',
      reservation: 'Ich helfe Ihnen bei einer Reservierung. Bitte teilen Sie mir Ihr Anreise-, Abreisedatum und die Anzahl der G√§ste mit.',
      checkin: 'Ich helfe Ihnen beim Check-in. Bitte geben Sie Ihre Best√§tigungsnummer oder Ihren Namen an.',
      checkout: 'Ich helfe Ihnen beim Check-out. Lassen Sie mich Ihre Rechnung und Geb√ºhren √ºberpr√ºfen.',
      roomAvailability: 'Ich √ºberpr√ºfe die Zimmerverf√ºgbarkeit f√ºr Sie. Welche Daten suchen Sie?'
    },
    prompts: {
      dates: 'Bitte teilen Sie mir Ihre Anreise- und Abreisedaten mit.',
      guests: 'Wie viele Erwachsene und Kinder werden √ºbernachten?',
      roomType: 'Welchen Zimmertyp bevorzugen Sie? Wir haben Ocean View King Suite, Deluxe Garden Room oder Family Oceanfront Suite.',
      guestInfo: 'Bitte geben Sie Ihren vollst√§ndigen Namen, Telefonnummer und E-Mail-Adresse an.',
      payment: 'Wie m√∂chten Sie bezahlen? Kreditkarte, im Hotel bezahlen oder digitale Geldb√∂rse?',
      confirmation: 'Bitte √ºberpr√ºfen Sie Ihre Buchungsdetails und sagen Sie "best√§tigen", um Ihre Reservierung abzuschlie√üen.'
    },
    responses: {
      dateConfirm: 'Verstanden. Anreise: {checkin}, Abreise: {checkout}.',
      roomSelected: '{roomType} ausgew√§hlt f√ºr ${price} pro Nacht.',
      infoReceived: 'Danke. Ich habe Ihre Informationen.',
      paymentSet: '{paymentMethod} ausgew√§hlt.',
      bookingConfirmed: 'Ihre Buchung ist best√§tigt! Best√§tigungsnummer: {confirmationId}',
      error: 'Das habe ich nicht verstanden. K√∂nnten Sie das bitte wiederholen?',
      help: 'Ich kann Ihnen bei Reservierungen, Check-in, Check-out und Zimmerverf√ºgbarkeit helfen. Sagen Sie mir einfach, was Sie brauchen.'
    },
    processCompletion: {
      reservation: {
        title: 'Reservierung Erfolgreich Erstellt! üéâ',
        description: 'Ihre Hotelreservierung wurde best√§tigt und ist f√ºr Ihren Aufenthalt bereit.',
        voiceMessage: 'Ihre Reservierung wurde erfolgreich erstellt! Best√§tigungsnummer {confirmationNumber}.',
        fields: {
          confirmationNumber: 'Best√§tigungsnummer',
          guestName: 'Gastname',
          roomType: 'Zimmertyp',
          checkInDate: 'Anreisedatum',
          checkOutDate: 'Abreisedatum',
          totalAmount: 'Gesamtbetrag'
        }
      },
      checkin: {
        title: 'Check-in Erfolgreich Abgeschlossen! üè®',
        description: 'Willkommen im Lagunacreek! Ihr Zimmer ist bereit und die Schl√ºsselkarten wurden vorbereitet.',
        voiceMessage: 'Check-in erfolgreich abgeschlossen! Ihr Zimmer {roomNumber} ist bereit.',
        fields: {
          roomNumber: 'Zimmernummer',
          guestName: 'Gastname',
          roomType: 'Zimmertyp',
          keyCards: 'Schl√ºsselkarten Bereit'
        }
      },
      checkout: {
        title: 'Check-out Erfolgreich Abgeschlossen! ‚úÖ',
        description: 'Vielen Dank f√ºr Ihren Aufenthalt bei uns! Wir hoffen, Sie haben Ihre Erfahrung genossen.',
        voiceMessage: 'Check-out erfolgreich abgeschlossen! Vielen Dank f√ºr Ihren Aufenthalt bei uns.',
        fields: {
          guestName: 'Gastname',
          roomNumber: 'Zimmernummer',
          totalAmount: 'Endbetrag',
          receipt: 'Quittung per E-Mail gesendet'
        }
      }
    }
  },
  it: {
    code: 'it',
    name: 'Italiano',
    flag: 'üáÆüáπ',
    speechCode: 'it-IT',
    voiceNames: ['Google italiano', 'Microsoft Cosimo', 'Alice'],
    greetings: {
      welcome: 'Benvenuti al Lagunacreek Resort & Spa! Posso aiutarvi con prenotazioni, check-in, check-out e disponibilit√† camere. Come posso assistervi oggi?',
      reservation: 'Vi aiuter√≤ a fare una prenotazione. Per favore ditemi la vostra data di arrivo, partenza e numero di ospiti.',
      checkin: 'Vi aiuter√≤ con il check-in. Per favore fornite il vostro numero di conferma o nome.',
      checkout: 'Vi aiuter√≤ con il check-out. Lasciatemi rivedere il vostro conto e le spese.',
      roomAvailability: 'Controller√≤ la disponibilit√† delle camere per voi. Quali date state cercando?'
    },
    prompts: {
      dates: 'Per favore ditemi le vostre date di arrivo e partenza.',
      guests: 'Quanti adulti e bambini soggiorneranno?',
      roomType: 'Che tipo di camera preferite? Abbiamo Suite King Vista Mare, Camera Deluxe Garden, o Suite Familiare Fronte Mare.',
      guestInfo: 'Per favore fornite il vostro nome completo, numero di telefono e indirizzo email.',
      payment: 'Come vorreste pagare? Carta di credito, pagare in hotel, o portafoglio digitale?',
      confirmation: 'Per favore rivedete i dettagli della vostra prenotazione e dite "conferma" per completare la vostra prenotazione.'
    },
    responses: {
      dateConfirm: 'Capito. Arrivo: {checkin}, Partenza: {checkout}.',
      roomSelected: '{roomType} selezionata a ${price} per notte.',
      infoReceived: 'Grazie. Ho le vostre informazioni.',
      paymentSet: '{paymentMethod} selezionato.',
      bookingConfirmed: 'La vostra prenotazione √® confermata! Numero di conferma: {confirmationId}',
      error: 'Non ho capito. Potreste ripetere per favore?',
      help: 'Posso aiutarvi con prenotazioni, check-in, check-out e disponibilit√† camere. Ditemi semplicemente di cosa avete bisogno.'
    },
    processCompletion: {
      reservation: {
        title: 'Prenotazione Creata con Successo! üéâ',
        description: 'La vostra prenotazione hotel √® stata confermata ed √® pronta per il vostro soggiorno.',
        voiceMessage: 'La vostra prenotazione √® stata creata con successo! Numero di conferma {confirmationNumber}.',
        fields: {
          confirmationNumber: 'Numero di Conferma',
          guestName: 'Nome Ospite',
          roomType: 'Tipo di Camera',
          checkInDate: 'Data di Arrivo',
          checkOutDate: 'Data di Partenza',
          totalAmount: 'Importo Totale'
        }
      },
      checkin: {
        title: 'Check-in Completato con Successo! üè®',
        description: 'Benvenuti al Lagunacreek! La vostra camera √® pronta e le carte d\'accesso sono state preparate.',
        voiceMessage: 'Check-in completato con successo! La vostra camera {roomNumber} √® pronta.',
        fields: {
          roomNumber: 'Numero Camera',
          guestName: 'Nome Ospite',
          roomType: 'Tipo di Camera',
          keyCards: 'Carte d\'Accesso Pronte'
        }
      },
      checkout: {
        title: 'Check-out Completato con Successo! ‚úÖ',
        description: 'Grazie per aver soggiornato con noi! Speriamo abbiate apprezzato la vostra esperienza.',
        voiceMessage: 'Check-out completato con successo! Grazie per aver soggiornato con noi.',
        fields: {
          guestName: 'Nome Ospite',
          roomNumber: 'Numero Camera',
          totalAmount: 'Importo Finale',
          receipt: 'Ricevuta inviata via email'
        }
      }
    }
  },
  pt: {
    code: 'pt',
    name: 'Portugu√™s',
    flag: 'üáµüáπ',
    speechCode: 'pt-PT',
    voiceNames: ['Google portugu√™s', 'Microsoft Helia', 'Joana'],
    greetings: {
      welcome: 'Bem-vindos ao Lagunacreek Resort & Spa! Posso ajud√°-los com reservas, check-in, check-out e disponibilidade de quartos. Como posso assistir hoje?',
      reservation: 'Vou ajud√°-los a fazer uma reserva. Por favor digam-me a vossa data de chegada, partida e n√∫mero de h√≥spedes.',
      checkin: 'Vou ajud√°-los com o check-in. Por favor forne√ßam o vosso n√∫mero de confirma√ß√£o ou nome.',
      checkout: 'Vou ajud√°-los com o check-out. Deixem-me rever a vossa conta e despesas.',
      roomAvailability: 'Vou verificar a disponibilidade de quartos para voc√™s. Que datas procuram?'
    },
    prompts: {
      dates: 'Por favor digam-me as vossas datas de chegada e partida.',
      guests: 'Quantos adultos e crian√ßas ficar√£o?',
      roomType: 'Que tipo de quarto preferem? Temos Suite King Vista Mar, Quarto Deluxe Garden, ou Suite Familiar Frente Mar.',
      guestInfo: 'Por favor forne√ßam o vosso nome completo, n√∫mero de telefone e endere√ßo de email.',
      payment: 'Como gostariam de pagar? Cart√£o de cr√©dito, pagar no hotel, ou carteira digital?',
      confirmation: 'Por favor revejam os detalhes da vossa reserva e digam "confirmar" para completar a vossa reserva.'
    },
    responses: {
      dateConfirm: 'Entendido. Chegada: {checkin}, Partida: {checkout}.',
      roomSelected: '{roomType} selecionado a ${price} por noite.',
      infoReceived: 'Obrigado. Tenho as vossas informa√ß√µes.',
      paymentSet: '{paymentMethod} selecionado.',
      bookingConfirmed: 'A vossa reserva est√° confirmada! N√∫mero de confirma√ß√£o: {confirmationId}',
      error: 'N√£o entendi isso. Poderiam repetir por favor?',
      help: 'Posso ajud√°-los com reservas, check-in, check-out e disponibilidade de quartos. Digam-me simplesmente o que precisam.'
    },
    processCompletion: {
      reservation: {
        title: 'Reserva Criada com Sucesso! üéâ',
        description: 'A vossa reserva de hotel foi confirmada e est√° pronta para a vossa estadia.',
        voiceMessage: 'A vossa reserva foi criada com sucesso! N√∫mero de confirma√ß√£o {confirmationNumber}.',
        fields: {
          confirmationNumber: 'N√∫mero de Confirma√ß√£o',
          guestName: 'Nome do H√≥spede',
          roomType: 'Tipo de Quarto',
          checkInDate: 'Data de Chegada',
          checkOutDate: 'Data de Partida',
          totalAmount: 'Valor Total'
        }
      },
      checkin: {
        title: 'Check-in Conclu√≠do com Sucesso! üè®',
        description: 'Bem-vindos ao Lagunacreek! O vosso quarto est√° pronto e os cart√µes de acesso foram preparados.',
        voiceMessage: 'Check-in conclu√≠do com sucesso! O vosso quarto {roomNumber} est√° pronto.',
        fields: {
          roomNumber: 'N√∫mero do Quarto',
          guestName: 'Nome do H√≥spede',
          roomType: 'Tipo de Quarto',
          keyCards: 'Cart√µes de Acesso Prontos'
        }
      },
      checkout: {
        title: 'Check-out Conclu√≠do com Sucesso! ‚úÖ',
        description: 'Obrigado por ficarem connosco! Esperamos que tenham desfrutado da vossa experi√™ncia.',
        voiceMessage: 'Check-out conclu√≠do com sucesso! Obrigado por ficarem connosco.',
        fields: {
          guestName: 'Nome do H√≥spede',
          roomNumber: 'N√∫mero do Quarto',
          totalAmount: 'Valor Final',
          receipt: 'Recibo enviado por email'
        }
      }
    }
  },
  ja: {
    code: 'ja',
    name: 'Êó•Êú¨Ë™û',
    flag: 'üáØüáµ',
    speechCode: 'ja-JP',
    voiceNames: ['Google Êó•Êú¨Ë™û', 'Microsoft Ayumi', 'Kyoko'],
    greetings: {
      welcome: '„É©„Ç∞„Éä„ÇØ„É™„Éº„ÇØ„É™„Çæ„Éº„ÉàÔºÜ„Çπ„Éë„Å∏„Çà„ÅÜ„Åì„ÅùÔºÅ‰∫àÁ¥Ñ„ÄÅ„ÉÅ„Çß„ÉÉ„ÇØ„Ç§„É≥„ÄÅ„ÉÅ„Çß„ÉÉ„ÇØ„Ç¢„Ç¶„Éà„ÄÅ„ÅäÈÉ®Â±ã„ÅÆÁ©∫ÂÆ§Áä∂Ê≥Å„Å´„Å§„ÅÑ„Å¶„ÅäÊâã‰ºù„ÅÑ„Åß„Åç„Åæ„Åô„ÄÇÊú¨Êó•„ÅØ„ÅÑ„Åã„Åå„ÅäÊâã‰ºù„ÅÑ„Åó„Åæ„Åó„Çá„ÅÜ„ÅãÔºü',
      reservation: '„Åî‰∫àÁ¥Ñ„ÅÆ„ÅäÊâã‰ºù„ÅÑ„Çí„ÅÑ„Åü„Åó„Åæ„Åô„ÄÇ„ÉÅ„Çß„ÉÉ„ÇØ„Ç§„É≥Êó•„ÄÅ„ÉÅ„Çß„ÉÉ„ÇØ„Ç¢„Ç¶„ÉàÊó•„ÄÅ„Ç≤„Çπ„ÉàÊï∞„Çí„ÅäÊïô„Åà„Åè„Å†„Åï„ÅÑ„ÄÇ',
      checkin: '„ÉÅ„Çß„ÉÉ„ÇØ„Ç§„É≥„ÅÆ„ÅäÊâã‰ºù„ÅÑ„Çí„ÅÑ„Åü„Åó„Åæ„Åô„ÄÇÁ¢∫Ë™çÁï™Âè∑„Åæ„Åü„ÅØ„ÅäÂêçÂâç„Çí„ÅäÊïô„Åà„Åè„Å†„Åï„ÅÑ„ÄÇ',
      checkout: '„ÉÅ„Çß„ÉÉ„ÇØ„Ç¢„Ç¶„Éà„ÅÆ„ÅäÊâã‰ºù„ÅÑ„Çí„ÅÑ„Åü„Åó„Åæ„Åô„ÄÇ„Åä‰ºöË®à„Å®ÊñôÈáë„ÇíÁ¢∫Ë™ç„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„Åç„Åæ„Åô„ÄÇ',
      roomAvailability: '„ÅäÈÉ®Â±ã„ÅÆÁ©∫ÂÆ§Áä∂Ê≥Å„ÇíÁ¢∫Ë™ç„ÅÑ„Åü„Åó„Åæ„Åô„ÄÇ„Å©„Å°„Çâ„ÅÆÊó•Á®ã„Çí„ÅäÊé¢„Åó„Åß„Åô„ÅãÔºü'
    },
    prompts: {
      dates: '„ÉÅ„Çß„ÉÉ„ÇØ„Ç§„É≥Êó•„Å®„ÉÅ„Çß„ÉÉ„ÇØ„Ç¢„Ç¶„ÉàÊó•„Çí„ÅäÊïô„Åà„Åè„Å†„Åï„ÅÑ„ÄÇ',
      guests: 'Â§ß‰∫∫„Å®Â≠ê‰æõ„ÅØ‰ΩïÂêçÊßò„Åß„Åó„Çá„ÅÜ„ÅãÔºü',
      roomType: '„Å©„Å°„Çâ„ÅÆ„ÅäÈÉ®Â±ã„Çø„Ç§„Éó„Çí„ÅîÂ∏åÊúõ„Åß„Åô„ÅãÔºü„Ç™„Éº„Ç∑„É£„É≥„Éì„É•„Éº„Ç≠„É≥„Ç∞„Çπ„Ç§„Éº„Éà„ÄÅ„Éá„É©„ÉÉ„ÇØ„Çπ„Ç¨„Éº„Éá„É≥„É´„Éº„É†„ÄÅ„Éï„Ç°„Éü„É™„Éº„Ç™„Éº„Ç∑„É£„É≥„Éï„É≠„É≥„Éà„Çπ„Ç§„Éº„Éà„Åå„Åî„Åñ„ÅÑ„Åæ„Åô„ÄÇ',
      guestInfo: '„ÅäÂêçÂâç„ÄÅÈõªË©±Áï™Âè∑„ÄÅ„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„Çí„ÅäÊïô„Åà„Åè„Å†„Åï„ÅÑ„ÄÇ',
      payment: '„ÅäÊîØÊâï„ÅÑÊñπÊ≥ï„ÅØ„ÅÑ„Åã„Åå„ÅÑ„Åü„Åó„Åæ„Åô„ÅãÔºü„ÇØ„É¨„Ç∏„ÉÉ„Éà„Ç´„Éº„Éâ„ÄÅ„Éõ„ÉÜ„É´„Åß„ÅÆ„ÅäÊîØÊâï„ÅÑ„ÄÅ„Éá„Ç∏„Çø„É´„Ç¶„Ç©„É¨„ÉÉ„ÉàÔºü',
      confirmation: '„Åî‰∫àÁ¥ÑÂÜÖÂÆπ„Çí„ÅîÁ¢∫Ë™ç„ÅÑ„Åü„Å†„Åç„ÄÅ„ÄåÁ¢∫Ë™ç„Äç„Å®„Åä„Å£„Åó„ÇÉ„Å£„Å¶„Åî‰∫àÁ¥Ñ„ÇíÂÆå‰∫Ü„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ'
    },
    responses: {
      dateConfirm: 'ÊâøÁü•„ÅÑ„Åü„Åó„Åæ„Åó„Åü„ÄÇ„ÉÅ„Çß„ÉÉ„ÇØ„Ç§„É≥Ôºö{checkin}„ÄÅ„ÉÅ„Çß„ÉÉ„ÇØ„Ç¢„Ç¶„ÉàÔºö{checkout}„ÄÇ',
      roomSelected: '{roomType}„Çí1Ê≥ä${price}„ÅßÈÅ∏Êäû„Åï„Çå„Åæ„Åó„Åü„ÄÇ',
      infoReceived: '„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åô„ÄÇ„ÅäÂÆ¢Êßò„ÅÆÊÉÖÂ†±„ÇíÊâø„Çä„Åæ„Åó„Åü„ÄÇ',
      paymentSet: '{paymentMethod}„ÇíÈÅ∏Êäû„Åï„Çå„Åæ„Åó„Åü„ÄÇ',
      bookingConfirmed: '„Åî‰∫àÁ¥Ñ„ÅåÁ¢∫ÂÆö„ÅÑ„Åü„Åó„Åæ„Åó„ÅüÔºÅÁ¢∫Ë™çÁï™Âè∑Ôºö{confirmationId}',
      error: 'Áî≥„ÅóË®≥„Åî„Åñ„ÅÑ„Åæ„Åõ„Çì„Åå„ÄÅÁêÜËß£„Åß„Åç„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ„ÇÇ„ÅÜ‰∏ÄÂ∫¶„Åä„Å£„Åó„ÇÉ„Å£„Å¶„ÅÑ„Åü„Å†„Åë„Åæ„Åô„ÅãÔºü',
      help: '‰∫àÁ¥Ñ„ÄÅ„ÉÅ„Çß„ÉÉ„ÇØ„Ç§„É≥„ÄÅ„ÉÅ„Çß„ÉÉ„ÇØ„Ç¢„Ç¶„Éà„ÄÅ„ÅäÈÉ®Â±ã„ÅÆÁ©∫ÂÆ§Áä∂Ê≥Å„Å´„Å§„ÅÑ„Å¶„ÅäÊâã‰ºù„ÅÑ„Åß„Åç„Åæ„Åô„ÄÇ„ÅîÁî®‰ª∂„Çí„ÅäËÅû„Åã„Åõ„Åè„Å†„Åï„ÅÑ„ÄÇ'
    },
    processCompletion: {
      reservation: {
        title: '„Åî‰∫àÁ¥Ñ„ÅåÊ≠£Â∏∏„Å´‰ΩúÊàê„Åï„Çå„Åæ„Åó„ÅüÔºÅüéâ',
        description: '„Éõ„ÉÜ„É´„ÅÆ„Åî‰∫àÁ¥Ñ„ÅåÁ¢∫Ë™ç„Åï„Çå„ÄÅ„ÅîÊªûÂú®„ÅÆÊ∫ñÂÇô„ÅåÊï¥„ÅÑ„Åæ„Åó„Åü„ÄÇ',
        voiceMessage: '„Åî‰∫àÁ¥Ñ„ÅåÊ≠£Â∏∏„Å´‰ΩúÊàê„Åï„Çå„Åæ„Åó„ÅüÔºÅÁ¢∫Ë™çÁï™Âè∑„ÅØ{confirmationNumber}„Åß„Åô„ÄÇ',
        fields: {
          confirmationNumber: 'Á¢∫Ë™çÁï™Âè∑',
          guestName: '„ÅäÂÆ¢Êßò„ÅÆ„ÅäÂêçÂâç',
          roomType: '„ÅäÈÉ®Â±ã„Çø„Ç§„Éó',
          checkInDate: '„ÉÅ„Çß„ÉÉ„ÇØ„Ç§„É≥Êó•',
          checkOutDate: '„ÉÅ„Çß„ÉÉ„ÇØ„Ç¢„Ç¶„ÉàÊó•',
          totalAmount: 'ÂêàË®àÈáëÈ°ç'
        }
      },
      checkin: {
        title: '„ÉÅ„Çß„ÉÉ„ÇØ„Ç§„É≥„ÅåÊ≠£Â∏∏„Å´ÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºÅüè®',
        description: '„É©„Ç∞„Éä„ÇØ„É™„Éº„ÇØ„Å∏„Çà„ÅÜ„Åì„ÅùÔºÅ„ÅäÈÉ®Â±ã„ÅÆÊ∫ñÂÇô„ÅåÊï¥„ÅÑ„ÄÅ„Ç≠„Éº„Ç´„Éº„Éâ„Çí„ÅîÁî®ÊÑè„ÅÑ„Åü„Åó„Åæ„Åó„Åü„ÄÇ',
        voiceMessage: '„ÉÅ„Çß„ÉÉ„ÇØ„Ç§„É≥„ÅåÊ≠£Â∏∏„Å´ÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºÅ„ÅäÈÉ®Â±ã{roomNumber}„ÅÆÊ∫ñÂÇô„ÅåÊï¥„ÅÑ„Åæ„Åó„Åü„ÄÇ',
        fields: {
          roomNumber: '„ÅäÈÉ®Â±ãÁï™Âè∑',
          guestName: '„ÅäÂÆ¢Êßò„ÅÆ„ÅäÂêçÂâç',
          roomType: '„ÅäÈÉ®Â±ã„Çø„Ç§„Éó',
          keyCards: '„Ç≠„Éº„Ç´„Éº„ÉâÊ∫ñÂÇôÂÆå‰∫Ü'
        }
      },
      checkout: {
        title: '„ÉÅ„Çß„ÉÉ„ÇØ„Ç¢„Ç¶„Éà„ÅåÊ≠£Â∏∏„Å´ÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºÅ‚úÖ',
        description: '„ÅîÂà©Áî®„ÅÑ„Åü„Å†„Åç„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åó„ÅüÔºÅ„ÅäÂÆ¢Êßò„ÅÆ‰ΩìÈ®ì„Çí„ÅäÊ•Ω„Åó„Åø„ÅÑ„Åü„Å†„Åë„Åü„Åì„Å®„ÇíÈ°ò„Å£„Å¶„Åä„Çä„Åæ„Åô„ÄÇ',
        voiceMessage: '„ÉÅ„Çß„ÉÉ„ÇØ„Ç¢„Ç¶„Éà„ÅåÊ≠£Â∏∏„Å´ÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºÅ„ÅîÂà©Áî®„ÅÑ„Åü„Å†„Åç„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åó„Åü„ÄÇ',
        fields: {
          guestName: '„ÅäÂÆ¢Êßò„ÅÆ„ÅäÂêçÂâç',
          roomNumber: '„ÅäÈÉ®Â±ãÁï™Âè∑',
          totalAmount: 'ÊúÄÁµÇÈáëÈ°ç',
          receipt: '„É¨„Ç∑„Éº„Éà„Çí„É°„Éº„É´„ÅßÈÄÅ‰ø°'
        }
      }
    }
  },
  ko: {
    code: 'ko',
    name: 'ÌïúÍµ≠Ïñ¥',
    flag: 'üá∞üá∑',
    speechCode: 'ko-KR',
    voiceNames: ['Google ÌïúÍµ≠Ïñ¥', 'Microsoft Heami', 'Seoyeon'],
    greetings: {
      welcome: 'ÎùºÍµ¨ÎÇòÌÅ¨Î¶≠ Î¶¨Ï°∞Ìä∏ Ïï§ Ïä§ÌååÏóê Ïò§Ïã† Í≤ÉÏùÑ ÌôòÏòÅÌï©ÎãàÎã§! ÏòàÏïΩ, Ï≤¥ÌÅ¨Ïù∏, Ï≤¥ÌÅ¨ÏïÑÏõÉ, Í∞ùÏã§ Ïù¥Ïö© Í∞ÄÎä• Ïó¨Î∂ÄÏóê ÎåÄÌï¥ ÎèÑÏõÄÏùÑ ÎìúÎ¶¥ Ïàò ÏûàÏäµÎãàÎã§. Ïò§Îäò Ïñ¥ÎñªÍ≤å ÎèÑÏôÄÎìúÎ¶¥ÍπåÏöî?',
      reservation: 'ÏòàÏïΩÏùÑ ÎèÑÏôÄÎìúÎ¶¨Í≤†ÏäµÎãàÎã§. Ï≤¥ÌÅ¨Ïù∏ ÎÇ†Ïßú, Ï≤¥ÌÅ¨ÏïÑÏõÉ ÎÇ†Ïßú, Ìà¨ÏàôÍ∞ù ÏàòÎ•º ÏïåÎ†§Ï£ºÏÑ∏Ïöî.',
      checkin: 'Ï≤¥ÌÅ¨Ïù∏ÏùÑ ÎèÑÏôÄÎìúÎ¶¨Í≤†ÏäµÎãàÎã§. ÌôïÏù∏ Î≤àÌò∏ÎÇò ÏÑ±Ìï®ÏùÑ ÏïåÎ†§Ï£ºÏÑ∏Ïöî.',
      checkout: 'Ï≤¥ÌÅ¨ÏïÑÏõÉÏùÑ ÎèÑÏôÄÎìúÎ¶¨Í≤†ÏäµÎãàÎã§. Í≥ÑÏÇ∞ÏÑúÏôÄ ÏöîÍ∏àÏùÑ ÌôïÏù∏Ìï¥Î≥¥Í≤†ÏäµÎãàÎã§.',
      roomAvailability: 'Í∞ùÏã§ Ïù¥Ïö© Í∞ÄÎä• Ïó¨Î∂ÄÎ•º ÌôïÏù∏Ìï¥ÎìúÎ¶¨Í≤†ÏäµÎãàÎã§. Ïñ¥Îñ§ ÎÇ†ÏßúÎ•º Ï∞æÍ≥† Í≥ÑÏã†Í∞ÄÏöî?'
    },
    prompts: {
      dates: 'Ï≤¥ÌÅ¨Ïù∏ ÎÇ†ÏßúÏôÄ Ï≤¥ÌÅ¨ÏïÑÏõÉ ÎÇ†ÏßúÎ•º ÏïåÎ†§Ï£ºÏÑ∏Ïöî.',
      guests: 'ÏÑ±Ïù∏Í≥º Ïñ¥Î¶∞Ïù¥Îäî Î™á Î™ÖÏù∏Í∞ÄÏöî?',
      roomType: 'Ïñ¥Îñ§ Í∞ùÏã§ Ïú†ÌòïÏùÑ ÏõêÌïòÏãúÎÇòÏöî? Ïò§ÏÖòÎ∑∞ ÌÇπ Ïä§ÏúÑÌä∏, ÎîîÎü≠Ïä§ Í∞ÄÎì† Î£∏, Ìå®Î∞ÄÎ¶¨ Ïò§ÏÖòÌîÑÎ°†Ìä∏ Ïä§ÏúÑÌä∏Í∞Ä ÏûàÏäµÎãàÎã§.',
      guestInfo: 'ÏÑ±Ìï®, Ï†ÑÌôîÎ≤àÌò∏, Ïù¥Î©îÏùº Ï£ºÏÜåÎ•º ÏïåÎ†§Ï£ºÏÑ∏Ïöî.',
      payment: 'Ïñ¥ÎñªÍ≤å Í≤∞Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå? Ïã†Ïö©Ïπ¥Îìú, Ìò∏ÌÖîÏóêÏÑú Í≤∞Ï†ú, ÎîîÏßÄÌÑ∏ ÏßÄÍ∞ë?',
      confirmation: 'ÏòàÏïΩ ÎÇ¥Ïö©ÏùÑ ÌôïÏù∏ÌïòÏãúÍ≥† "ÌôïÏù∏"Ïù¥ÎùºÍ≥† ÎßêÏîÄÌï¥Ï£ºÏãúÎ©¥ ÏòàÏïΩÏù¥ ÏôÑÎ£åÎê©ÎãàÎã§.'
    },
    responses: {
      dateConfirm: 'ÏïåÍ≤†ÏäµÎãàÎã§. Ï≤¥ÌÅ¨Ïù∏: {checkin}, Ï≤¥ÌÅ¨ÏïÑÏõÉ: {checkout}.',
      roomSelected: '{roomType}Ïù¥ 1Î∞ïÎãπ ${price}Î°ú ÏÑ†ÌÉùÎêòÏóàÏäµÎãàÎã§.',
      infoReceived: 'Í∞êÏÇ¨Ìï©ÎãàÎã§. Í≥†Í∞ùÎãòÏùò Ï†ïÎ≥¥Î•º Î∞õÏïòÏäµÎãàÎã§.',
      paymentSet: '{paymentMethod}Ïù¥ ÏÑ†ÌÉùÎêòÏóàÏäµÎãàÎã§.',
      bookingConfirmed: 'ÏòàÏïΩÏù¥ ÌôïÏ†ïÎêòÏóàÏäµÎãàÎã§! ÌôïÏù∏ Î≤àÌò∏: {confirmationId}',
      error: 'Ï£ÑÏÜ°Ìï©ÎãàÎã§. Ïù¥Ìï¥ÌïòÏßÄ Î™ªÌñàÏäµÎãàÎã§. Îã§Ïãú ÎßêÏîÄÌï¥ Ï£ºÏãúÍ≤†Ïñ¥Ïöî?',
      help: 'ÏòàÏïΩ, Ï≤¥ÌÅ¨Ïù∏, Ï≤¥ÌÅ¨ÏïÑÏõÉ, Í∞ùÏã§ Ïù¥Ïö© Í∞ÄÎä• Ïó¨Î∂ÄÏóê ÎåÄÌï¥ ÎèÑÏõÄÏùÑ ÎìúÎ¶¥ Ïàò ÏûàÏäµÎãàÎã§. Î¨¥ÏóáÏù¥ ÌïÑÏöîÌïúÏßÄ ÎßêÏîÄÌï¥ Ï£ºÏÑ∏Ïöî.'
    },
    processCompletion: {
      reservation: {
        title: 'ÏòàÏïΩÏù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏÉùÏÑ±ÎêòÏóàÏäµÎãàÎã§! üéâ',
        description: 'Ìò∏ÌÖî ÏòàÏïΩÏù¥ ÌôïÏù∏ÎêòÏóàÏúºÎ©∞ ÏàôÎ∞ïÏùÑ ÏúÑÌïú Ï§ÄÎπÑÍ∞Ä ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§.',
        voiceMessage: 'ÏòàÏïΩÏù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏÉùÏÑ±ÎêòÏóàÏäµÎãàÎã§! ÌôïÏù∏ Î≤àÌò∏Îäî {confirmationNumber}ÏûÖÎãàÎã§.',
        fields: {
          confirmationNumber: 'ÌôïÏù∏ Î≤àÌò∏',
          guestName: 'Ìà¨ÏàôÍ∞ù ÏÑ±Ìï®',
          roomType: 'Í∞ùÏã§ Ïú†Ìòï',
          checkInDate: 'Ï≤¥ÌÅ¨Ïù∏ ÎÇ†Ïßú',
          checkOutDate: 'Ï≤¥ÌÅ¨ÏïÑÏõÉ ÎÇ†Ïßú',
          totalAmount: 'Ï¥ù Í∏àÏï°'
        }
      },
      checkin: {
        title: 'Ï≤¥ÌÅ¨Ïù∏Ïù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§! üè®',
        description: 'ÎùºÍµ¨ÎÇòÌÅ¨Î¶≠Ïóê Ïò§Ïã† Í≤ÉÏùÑ ÌôòÏòÅÌï©ÎãàÎã§! Í∞ùÏã§Ïù¥ Ï§ÄÎπÑÎêòÏóàÏúºÎ©∞ ÌÇ§ Ïπ¥ÎìúÍ∞Ä Ï§ÄÎπÑÎêòÏóàÏäµÎãàÎã§.',
        voiceMessage: 'Ï≤¥ÌÅ¨Ïù∏Ïù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§! Í∞ùÏã§ {roomNumber}Ïù¥ Ï§ÄÎπÑÎêòÏóàÏäµÎãàÎã§.',
        fields: {
          roomNumber: 'Í∞ùÏã§ Î≤àÌò∏',
          guestName: 'Ìà¨ÏàôÍ∞ù ÏÑ±Ìï®',
          roomType: 'Í∞ùÏã§ Ïú†Ìòï',
          keyCards: 'ÌÇ§ Ïπ¥Îìú Ï§ÄÎπÑ ÏôÑÎ£å'
        }
      },
      checkout: {
        title: 'Ï≤¥ÌÅ¨ÏïÑÏõÉÏù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§! ‚úÖ',
        description: 'Ï†ÄÌù¨ÏôÄ Ìï®Íªò Î®∏Î¨ºÎü¨ Ï£ºÏÖîÏÑú Í∞êÏÇ¨Ìï©ÎãàÎã§! Ï¶êÍ±∞Ïö¥ Í≤ΩÌóòÏù¥ ÎêòÏÖ®Í∏∞Î•º Î∞îÎûçÎãàÎã§.',
        voiceMessage: 'Ï≤¥ÌÅ¨ÏïÑÏõÉÏù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§! Ï†ÄÌù¨ÏôÄ Ìï®Íªò Î®∏Î¨ºÎü¨ Ï£ºÏÖîÏÑú Í∞êÏÇ¨Ìï©ÎãàÎã§.',
        fields: {
          guestName: 'Ìà¨ÏàôÍ∞ù ÏÑ±Ìï®',
          roomNumber: 'Í∞ùÏã§ Î≤àÌò∏',
          totalAmount: 'ÏµúÏ¢Ö Í∏àÏï°',
          receipt: 'ÏòÅÏàòÏ¶ùÏù¥ Ïù¥Î©îÏùºÎ°ú Ï†ÑÏÜ°Îê®'
        }
      }
    }
  },
  zh: {
    code: 'zh',
    name: '‰∏≠Êñá',
    flag: 'üá®üá≥',
    speechCode: 'zh-CN',
    voiceNames: ['Google ‰∏≠Êñá', 'Microsoft Xiaoxiao', 'Xiaoyu'],
    greetings: {
      welcome: 'Ê¨¢ËøéÊù•Âà∞ÊãâÂè§Á∫≥ÂÖãÈáåÂÖãÂ∫¶ÂÅáÊùëÂèäÊ∞¥Áñó‰∏≠ÂøÉÔºÅÊàëÂèØ‰ª•Â∏ÆÂä©ÊÇ®È¢ÑËÆ¢„ÄÅÂäûÁêÜÂÖ•‰Ωè„ÄÅÈÄÄÊàøÂíåÊü•ËØ¢ÂÆ¢ÊàøÂèØÁî®ÊÄß„ÄÇ‰ªäÂ§©ÊàëÂèØ‰ª•‰∏∫ÊÇ®ÂÅö‰∫õ‰ªÄ‰πàÔºü',
      reservation: 'ÊàëÊù•Â∏ÆÊÇ®È¢ÑËÆ¢„ÄÇËØ∑ÂëäËØâÊàëÊÇ®ÁöÑÂÖ•‰ΩèÊó•Êúü„ÄÅÈÄÄÊàøÊó•ÊúüÂíåÂÆ¢‰∫∫Êï∞Èáè„ÄÇ',
      checkin: 'ÊàëÊù•Â∏ÆÊÇ®ÂäûÁêÜÂÖ•‰Ωè„ÄÇËØ∑Êèê‰æõÊÇ®ÁöÑÁ°ÆËÆ§Âè∑Á†ÅÊàñÂßìÂêç„ÄÇ',
      checkout: 'ÊàëÊù•Â∏ÆÊÇ®ÂäûÁêÜÈÄÄÊàø„ÄÇËÆ©ÊàëÊü•ÁúãÊÇ®ÁöÑË¥¶ÂçïÂíåË¥πÁî®„ÄÇ',
      roomAvailability: 'ÊàëÊù•‰∏∫ÊÇ®Êü•ËØ¢ÂÆ¢ÊàøÂèØÁî®ÊÄß„ÄÇÊÇ®Âú®ÂØªÊâæÂì™‰∫õÊó•ÊúüÔºü'
    },
    prompts: {
      dates: 'ËØ∑ÂëäËØâÊàëÊÇ®ÁöÑÂÖ•‰ΩèÂíåÈÄÄÊàøÊó•Êúü„ÄÇ',
      guests: 'ÊúâÂ§öÂ∞ëÊàê‰∫∫ÂíåÂÑøÁ´•ÂÖ•‰ΩèÔºü',
      roomType: 'ÊÇ®Â∏åÊúõÂì™ÁßçÊàøÂûãÔºüÊàë‰ª¨ÊúâÊµ∑ÊôØÂ§ßÂ∫äÂ•óÊàø„ÄÅË±™ÂçéËä±Âõ≠ÊàøÊàñÂÆ∂Â∫≠Êµ∑ÊôØÂ•óÊàø„ÄÇ',
      guestInfo: 'ËØ∑Êèê‰æõÊÇ®ÁöÑÂÖ®Âêç„ÄÅÁîµËØùÂè∑Á†ÅÂíåÁîµÂ≠êÈÇÆ‰ª∂Âú∞ÂùÄ„ÄÇ',
      payment: 'ÊÇ®Â∏åÊúõÂ¶Ç‰Ωï‰ªòÊ¨æÔºü‰ø°Áî®Âç°„ÄÅÂà∞Â∫ó‰ªòÊ¨æËøòÊòØÊï∞Â≠óÈí±ÂåÖÔºü',
      confirmation: 'ËØ∑Êü•ÁúãÊÇ®ÁöÑÈ¢ÑËÆ¢ËØ¶ÊÉÖÂπ∂ËØ¥"Á°ÆËÆ§"Êù•ÂÆåÊàêÊÇ®ÁöÑÈ¢ÑËÆ¢„ÄÇ'
    },
    responses: {
      dateConfirm: 'ÊòéÁôΩ‰∫Ü„ÄÇÂÖ•‰ΩèÔºö{checkin}ÔºåÈÄÄÊàøÔºö{checkout}„ÄÇ',
      roomSelected: 'Â∑≤ÈÄâÊã©{roomType}ÔºåÊØèÊôö${price}„ÄÇ',
      infoReceived: 'Ë∞¢Ë∞¢„ÄÇÊàëÂ∑≤Êî∂Âà∞ÊÇ®ÁöÑ‰ø°ÊÅØ„ÄÇ',
      paymentSet: 'Â∑≤ÈÄâÊã©{paymentMethod}„ÄÇ',
      bookingConfirmed: 'ÊÇ®ÁöÑÈ¢ÑËÆ¢Â∑≤Á°ÆËÆ§ÔºÅÁ°ÆËÆ§Âè∑Á†ÅÔºö{confirmationId}',
      error: 'Êä±Ê≠âÔºåÊàëÊ≤°ÊúâÁêÜËß£„ÄÇÊÇ®ËÉΩÂÜçËØ¥‰∏ÄÈÅçÂêóÔºü',
      help: 'ÊàëÂèØ‰ª•Â∏ÆÂä©ÊÇ®È¢ÑËÆ¢„ÄÅÂäûÁêÜÂÖ•‰Ωè„ÄÅÈÄÄÊàøÂíåÊü•ËØ¢ÂÆ¢ÊàøÂèØÁî®ÊÄß„ÄÇËØ∑ÂëäËØâÊàëÊÇ®ÈúÄË¶Å‰ªÄ‰πà„ÄÇ'
    },
    processCompletion: {
      reservation: {
        title: 'È¢ÑËÆ¢ÂàõÂª∫ÊàêÂäüÔºÅüéâ',
        description: 'ÊÇ®ÁöÑÈÖíÂ∫óÈ¢ÑËÆ¢Â∑≤Á°ÆËÆ§Ôºå‰∏∫ÊÇ®ÁöÑ‰ΩèÂÆøÂÅöÂ•Ω‰∫ÜÂáÜÂ§á„ÄÇ',
        voiceMessage: 'ÊÇ®ÁöÑÈ¢ÑËÆ¢ÂàõÂª∫ÊàêÂäüÔºÅÁ°ÆËÆ§Âè∑Á†ÅÊòØ{confirmationNumber}„ÄÇ',
        fields: {
          confirmationNumber: 'Á°ÆËÆ§Âè∑Á†Å',
          guestName: 'ÂÆ¢‰∫∫ÂßìÂêç',
          roomType: 'ÊàøÈó¥Á±ªÂûã',
          checkInDate: 'ÂÖ•‰ΩèÊó•Êúü',
          checkOutDate: 'ÈÄÄÊàøÊó•Êúü',
          totalAmount: 'ÊÄªÈáëÈ¢ù'
        }
      },
      checkin: {
        title: 'ÂÖ•‰ΩèÂäûÁêÜÊàêÂäüÔºÅüè®',
        description: 'Ê¨¢ËøéÊù•Âà∞ÊãâÂè§Á∫≥ÂÖãÈáåÂÖãÔºÅÊÇ®ÁöÑÊàøÈó¥Â∑≤ÂáÜÂ§áÂ•ΩÔºåÊàøÂç°Â∑≤ÂáÜÂ§áÂÆåÊØï„ÄÇ',
        voiceMessage: 'ÂÖ•‰ΩèÂäûÁêÜÊàêÂäüÔºÅÊÇ®ÁöÑÊàøÈó¥{roomNumber}Â∑≤ÂáÜÂ§áÂ•Ω„ÄÇ',
        fields: {
          roomNumber: 'ÊàøÈó¥Âè∑Á†Å',
          guestName: 'ÂÆ¢‰∫∫ÂßìÂêç',
          roomType: 'ÊàøÈó¥Á±ªÂûã',
          keyCards: 'ÊàøÂç°Â∑≤ÂáÜÂ§á'
        }
      },
      checkout: {
        title: 'ÈÄÄÊàøÂäûÁêÜÊàêÂäüÔºÅ‚úÖ',
        description: 'ÊÑüË∞¢ÊÇ®ÈÄâÊã©Êàë‰ª¨ÔºÅÂ∏åÊúõÊÇ®‰∫´Âèó‰∫ÜËøôÊ¨°ÁöÑ‰ΩìÈ™å„ÄÇ',
        voiceMessage: 'ÈÄÄÊàøÂäûÁêÜÊàêÂäüÔºÅÊÑüË∞¢ÊÇ®ÈÄâÊã©Êàë‰ª¨„ÄÇ',
        fields: {
          guestName: 'ÂÆ¢‰∫∫ÂßìÂêç',
          roomNumber: 'ÊàøÈó¥Âè∑Á†Å',
          totalAmount: 'ÊúÄÁªàÈáëÈ¢ù',
          receipt: 'Êî∂ÊçÆÂ∑≤ÂèëÈÄÅËá≥ÈÇÆÁÆ±'
        }
      }
    }
  }
};

class MultilingualAIService {
  private currentLanguage: string = 'en';
  private currentVoice: SpeechSynthesisVoice | null = null;
  private availableVoices: SpeechSynthesisVoice[] = [];

  constructor() {
    this.initializeVoices();
  }

  private initializeVoices() {
    if ('speechSynthesis' in window) {
      const loadVoices = () => {
        this.availableVoices = speechSynthesis.getVoices();
        this.setVoiceForLanguage(this.currentLanguage);
      };

      loadVoices();
      speechSynthesis.onvoiceschanged = loadVoices;
    }
  }

  public setLanguage(languageCode: string) {
    if (languageConfigs[languageCode]) {
      this.currentLanguage = languageCode;
      this.setVoiceForLanguage(languageCode);
    }
  }

  private setVoiceForLanguage(languageCode: string) {
    const config = languageConfigs[languageCode];
    if (!config) return;

    // Find the best voice for this language
    const preferredVoice = this.availableVoices.find(voice => 
      voice.lang.startsWith(config.speechCode) || 
      config.voiceNames.some(name => voice.name.includes(name))
    );

    if (preferredVoice) {
      this.currentVoice = preferredVoice;
    } else {
      // Fallback to any voice that matches the language code
      this.currentVoice = this.availableVoices.find(voice => 
        voice.lang.startsWith(languageCode)
      ) || null;
    }
  }

  public speak(text: string, languageCode?: string): Promise<void> {
    return new Promise((resolve, reject) => {
      if (!('speechSynthesis' in window)) {
        reject(new Error('Speech synthesis not supported'));
        return;
      }

      try {
        // Stop any currently speaking utterance
        speechSynthesis.cancel();

        const lang = languageCode || this.currentLanguage;
        const utterance = new SpeechSynthesisUtterance(text);
        
        if (this.currentVoice && this.currentVoice.lang.startsWith(lang)) {
          utterance.voice = this.currentVoice;
        }
        
        utterance.lang = languageConfigs[lang]?.speechCode || 'en-US';
        utterance.rate = 0.9;
        utterance.pitch = 1;
        utterance.volume = 1;

        utterance.onend = () => {
          console.log('Speech synthesis completed');
          resolve();
        };
        
        utterance.onerror = (event) => {
          console.error('Speech synthesis error:', event);
          reject(event.error);
        };
        
        utterance.onstart = () => {
          console.log('Speech synthesis started');
        };

        // Small delay to ensure previous speech is cancelled
        setTimeout(() => {
          if (speechSynthesis.speaking) {
            speechSynthesis.cancel();
            setTimeout(() => {
              speechSynthesis.speak(utterance);
            }, 50);
          } else {
            speechSynthesis.speak(utterance);
          }
        }, 100);
      } catch (error) {
        console.error('Speech synthesis setup error:', error);
        reject(error);
      }
    });
  }

  public getGreeting(type: keyof LanguageConfig['greetings']): string {
    const config = languageConfigs[this.currentLanguage];
    return config?.greetings[type] || languageConfigs.en.greetings[type];
  }

  public getPrompt(type: keyof LanguageConfig['prompts']): string {
    const config = languageConfigs[this.currentLanguage];
    return config?.prompts[type] || languageConfigs.en.prompts[type];
  }

  public getResponse(type: keyof LanguageConfig['responses'], variables?: Record<string, string>, languageCode?: string): string {
    const lang = languageCode || this.currentLanguage;
    const config = languageConfigs[lang];
    let response = config?.responses[type] || languageConfigs.en.responses[type];
    
    if (variables) {
      Object.entries(variables).forEach(([key, value]) => {
        response = response.replace(`{${key}}`, value);
      });
    }
    
    return response;
  }

  public getProcessCompletionMessage(
    processType: 'reservation' | 'checkin' | 'checkout',
    messageType: 'title' | 'description' | 'voiceMessage',
    variables?: Record<string, string>,
    languageCode?: string
  ): string {
    const lang = languageCode || this.currentLanguage;
    const config = languageConfigs[lang];
    let message = config?.processCompletion?.[processType]?.[messageType] || 
                  languageConfigs.en.processCompletion[processType][messageType];
    
    if (variables) {
      Object.entries(variables).forEach(([key, value]) => {
        message = message.replace(`{${key}}`, value);
      });
    }
    
    return message;
  }

  public getProcessCompletionFields(
    processType: 'reservation' | 'checkin' | 'checkout',
    languageCode?: string
  ): Record<string, string> {
    const lang = languageCode || this.currentLanguage;
    const config = languageConfigs[lang];
    return config?.processCompletion?.[processType]?.fields || 
           languageConfigs.en.processCompletion[processType].fields;
  }
  public getSpeechRecognitionLanguage(): string {
    const config = languageConfigs[this.currentLanguage];
    return config?.speechCode || 'en-US';
  }

  public getCurrentLanguage(): string {
    return this.currentLanguage;
  }

  public getAvailableLanguages(): Array<{code: string, name: string, flag: string}> {
    return Object.values(languageConfigs).map(config => ({
      code: config.code,
      name: config.name,
      flag: config.flag
    }));
  }

  public getLanguageInfo(code: string): {code: string, name: string, flag: string, nativeName?: string} {
    const config = languageConfigs[code];
    const nativeNames: Record<string, string> = {
      'en': 'English',
      'es': 'Espa√±ol', 
      'hi': '‡§π‡§ø‡§Ç‡§¶‡•Ä',
      'fr': 'Fran√ßais',
      'de': 'Deutsch',
      'it': 'Italiano',
      'pt': 'Portugu√™s',
      'ja': 'Êó•Êú¨Ë™û',
      'ko': 'ÌïúÍµ≠Ïñ¥',
      'zh': '‰∏≠Êñá'
    };
    
    return {
      code: config?.code || 'en',
      name: config?.name || 'English',
      flag: config?.flag || 'üá∫üá∏',
      nativeName: nativeNames[code] || 'English'
    };
  }

  public detectLanguageFromText(text: string): string {
    // Simple language detection based on common words/patterns
    const lowerText = text.toLowerCase();
    
    // Enhanced detection with more patterns
    if (/[\u0900-\u097F]/.test(text)) return 'hi'; // Devanagari script
    if (/[\u4e00-\u9fff]/.test(text)) return 'zh'; // Chinese characters
    if (/[\u3040-\u309f\u30a0-\u30ff]/.test(text)) return 'ja'; // Japanese hiragana/katakana
    if (/[\uac00-\ud7af]/.test(text)) return 'ko'; // Korean hangul
    
    // Word-based detection
    // Spanish detection
    if (/\b(hola|gracias|por favor|habitaci√≥n|reserva|espa√±ol|quiero|necesito|hotel|cuarto)\b/.test(lowerText)) return 'es';
    
    // French detection  
    if (/\b(bonjour|merci|chambre|r√©servation|fran√ßais|voudrais|besoin|h√¥tel)\b/.test(lowerText)) return 'fr';
    
    // German detection
    if (/\b(hallo|danke|zimmer|reservierung|deutsch|m√∂chte|brauche|hotel)\b/.test(lowerText)) return 'de';
    
    // Italian detection
    if (/\b(ciao|grazie|camera|prenotazione|italiano|vorrei|bisogno|albergo)\b/.test(lowerText)) return 'it';
    
    // Portuguese detection
    if (/\b(ol√°|obrigado|quarto|reserva|portugu√™s|quero|preciso|hotel)\b/.test(lowerText)) return 'pt';
    
    // Hindi detection
    if (/\b(‡§®‡§Æ‡§∏‡•ç‡§§‡•á|‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶|‡§ï‡§Æ‡§∞‡§æ|‡§¨‡•Å‡§ï‡§ø‡§Ç‡§ó|‡§π‡•ã‡§ü‡§≤|‡§Ü‡§∞‡§ï‡•ç‡§∑‡§£|‡§ö‡§æ‡§π‡§ø‡§è|‡§ï‡§∞‡§®‡§æ)\b/.test(lowerText)) return 'hi';
    
    // Japanese detection
    if (/\b(„Åì„Çì„Å´„Å°„ÅØ|„ÅÇ„Çä„Åå„Å®„ÅÜ|ÈÉ®Â±ã|‰∫àÁ¥Ñ|„Éõ„ÉÜ„É´|„Åó„Åü„ÅÑ)\b/.test(lowerText)) return 'ja';
    
    // Korean detection
    if (/\b(ÏïàÎÖïÌïòÏÑ∏Ïöî|Í∞êÏÇ¨Ìï©ÎãàÎã§|Î∞©|ÏòàÏïΩ|Ìò∏ÌÖî|ÌïòÍ≥†Ïã∂Ïñ¥Ïöî)\b/.test(lowerText)) return 'ko';
    
    // Chinese detection
    if (/\b(‰Ω†Â•Ω|Ë∞¢Ë∞¢|ÊàøÈó¥|È¢ÑËÆ¢|ÈÖíÂ∫ó|ÊÉ≥Ë¶Å)\b/.test(lowerText)) return 'zh';
    
    return 'en'; // Default to English
  }

  public translateText(text: string, targetLanguage: string): string {
    // This is a simplified translation service
    // In production, you would integrate with Google Translate API or similar
    const translations: Record<string, Record<string, string>> = {
      'hello': {
        'es': 'hola',
        'hi': '‡§®‡§Æ‡§∏‡•ç‡§§‡•á',
        'fr': 'bonjour',
        'de': 'hallo',
        'it': 'ciao',
        'pt': 'ol√°',
        'ja': '„Åì„Çì„Å´„Å°„ÅØ',
        'ko': 'ÏïàÎÖïÌïòÏÑ∏Ïöî',
        'zh': '‰Ω†Â•Ω'
      },
      'thank you': {
        'es': 'gracias',
        'hi': '‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶',
        'fr': 'merci',
        'de': 'danke',
        'it': 'grazie',
        'pt': 'obrigado',
        'ja': '„ÅÇ„Çä„Åå„Å®„ÅÜ',
        'ko': 'Í∞êÏÇ¨Ìï©ÎãàÎã§',
        'zh': 'Ë∞¢Ë∞¢'
      }
    };

    const lowerText = text.toLowerCase();
    for (const [english, translations_map] of Object.entries(translations)) {
      if (lowerText.includes(english)) {
        return translations_map[targetLanguage] || text;
      }
    }

    return text; // Return original if no translation found
  }
}

export const multilingualAI = new MultilingualAIService();